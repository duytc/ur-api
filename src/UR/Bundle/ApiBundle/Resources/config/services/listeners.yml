parameters:
    ur.event.data_set_reload_completed: ur.event.data_set_reload_completed
    ur.event.connected_data_source_reload_completed: ur.event.connected_data_source_reload_completed

services:
    ur_api.event_listener.update_metrics_and_dimensions_for_report_view_listener:
        class: UR\Bundle\ApiBundle\EventListener\UpdateMetricsAndDimensionsForReportViewListener
        arguments:
            - '@ur.services.report.params_builder'
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }

    ur_api.event_listener.report_view_data_set_change_listener:
        class: UR\Bundle\ApiBundle\EventListener\ReportViewDataSetChangeListener
        arguments:
            - '@ur.services.report.params_builder'
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: postFlush }

    ur_api.event_listener.report_view_change_for_shared_keys_config_listener:
        class: UR\Bundle\ApiBundle\EventListener\ReportViewChangeForSharedKeysConfigListener
        arguments:
            - '@ur.service.report.shareable_link_updater'
        tags:
            - { name: doctrine.event_listener, event: postPersist }
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: postFlush }

    ur_api.event_listener.map_builder_change_listener:
        class: UR\Bundle\ApiBundle\EventListener\MapBuilderChangeListener
        arguments:
            - '@logger'
            - '@ur.worker.manager'
            - '@ur.service.augmentation_mapping_service'
        tags:
            - { name: doctrine.event_listener, event: postPersist }
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: preRemove }
            - { name: doctrine.event_listener, event: onFlush }
            - { name: doctrine.event_listener, event: postFlush }

    ur_api.event_listener.import_history_change_for_map_builder_listener:
        class: UR\Bundle\ApiBundle\EventListener\ImportHistoryChangeForMapBuilderListener
        arguments:
            - '@logger'
            - '@ur.worker.manager'
        tags:
            - { name: doctrine.event_listener, event: preRemove }

    ur_api.event_listener.data_source_entry_change_for_map_builder_listener:
        class: UR\Bundle\ApiBundle\EventListener\DataSourceEntryChangeForMapBuilderListener
        arguments:
            - '@logger'
            - '@ur.worker.manager'
        tags:
            - { name: doctrine.event_listener, event: preRemove }

    ur_api.event_listener.data_source_entry_change_for_time_series_listener:
        class: UR\Bundle\ApiBundle\EventListener\DataSourceEntryChangeForTimeSeriesListener
        arguments:
            - '@logger'
            - '@ur.worker.manager'
        tags:
            - { name: doctrine.event_listener, event: postPersist }

#    ur_api.event_listener.data_source_entry_change_for_huge_file_listener:
#        class: UR\Bundle\ApiBundle\EventListener\DataSourceEntryChangeForHugeFileListener
#        arguments:
#            - '@logger'
#            - '@ur.worker.manager'
#        tags:
#            - { name: doctrine.event_listener, event: postPersist }

    ur_api.event_listener.data_set_change_for_map_builder_listener:
        class: UR\Bundle\ApiBundle\EventListener\DataSetChangeForMapBuilderListener
        arguments:
            - '@logger'
            - '@ur.worker.manager'
            - '@ur.service.augmentation_mapping_service'
        tags:
            - { name: doctrine.event_listener, event: preRemove }

    ur_api.event_listener.count_number_of_changes_when_data_set_change_listener:
        class: UR\Bundle\ApiBundle\EventListener\CountNumberOfChangesWhenDataSetChangeListener
        tags:
            - { name: doctrine.event_listener, event: preUpdate }

    ur_api.event_listener.count_number_of_changes_when_connected_data_source_change_listener:
        class: UR\Bundle\ApiBundle\EventListener\CountNumberOfChangesWhenConnectedDataSourceChangeListener
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: preRemove }
            - { name: doctrine.event_listener, event: onFlush }

    ur_api.event_listener.reset_number_of_changes_listener:
        class: UR\Bundle\ApiBundle\EventListener\ResetNumberOfChangesListener
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@logger'
        tags:
            - { name: kernel.event_listener, event: ur.event.data_set_reload_completed, method: onDataSetReloadCompleted }
            - { name: kernel.event_listener, event: ur.event.connected_data_source_reload_completed, method: onConnectedDataSourceReloadCompleted }

    ur_api.event_listener.update_next_alert_time_for_data_source_listener:
        class: UR\Bundle\ApiBundle\EventListener\UpdateNextAlertTimeForDataSourceListener
        arguments:
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }

    ur_api.event_listener.update_secure_params_for_data_source_integration_listener:
        class: UR\Bundle\ApiBundle\EventListener\UpdateSecureParamsForDataSourceIntegrationListener
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }

    ur_api.event_listener.update_next_execute_at_for_data_source_integration_schedule_listener:
        class: UR\Bundle\ApiBundle\EventListener\UpdateDataSourceIntegrationScheduleListener
        arguments:
            - '@ur.service.date_time.next_executed_at'
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: postFlush }

    ur_api.event_listener.create_data_import_table_when_create_new_data_set_listener:
        class: UR\Bundle\ApiBundle\EventListener\CreateDataImportTableWhenCreateNewDataSetListener
        tags:
            - { name: doctrine.event_listener, event: postPersist }

    ur_api.event_listener.update_last_activity_for_data_source:
        class: UR\Bundle\ApiBundle\EventListener\UpdateLastActivityForDataSource
        tags:
            - { name: doctrine.event_listener, event: postPersist }
            - { name: doctrine.event_listener, event: postFlush }

    ur_api.event_listener.update_last_activity_for_data_set_when_connected_data_source_changed:
        class: UR\Bundle\ApiBundle\EventListener\UpdateLastActivityForDataSetWhenConnectedDataSourceChanged
        tags:
            - { name: doctrine.event_listener, event: postPersist }
            - { name: doctrine.event_listener, event: postUpdate }
            - { name: doctrine.event_listener, event: postFlush }

    ur_api.event_listener.update_last_activity_for_data_set_when_data_set_change:
            class: UR\Bundle\ApiBundle\EventListener\UpdateLastActivityForDataSetWhenDataSetChanged
            tags:
                - { name: doctrine.event_listener, event: prePersist }
                - { name: doctrine.event_listener, event: preUpdate }

    ur_api.event_listener.update_last_activity_for_report_view_listener:
            class: UR\Bundle\ApiBundle\EventListener\UpdateLastActivityForReportViewListener
            tags:
                - { name: doctrine.event_listener, event: prePersist }
                - { name: doctrine.event_listener, event: preUpdate }

    ur_api.event_listener.delete_data_set_table_listener:
        class: UR\Bundle\ApiBundle\EventListener\DeleteDataSetTableListener
        arguments:
        tags:
            - { name: doctrine.event_listener, event: preRemove }

    ur_api.event_listener.delete_report_view_add_comditional_transform_value_listener:
        class: UR\Bundle\ApiBundle\EventListener\DeleteReportViewAddConditionalTransformValueListener
        arguments:
        tags:
            - { name: doctrine.event_listener, event: preRemove }
    ur_api.event_listener.update_condition_transform_value_when_report_view_change_dimensions_metrics_listener:
        class: UR\Bundle\ApiBundle\EventListener\UpdateConditionTransformValueWhenReportViewChangeDimensionsMetricsListener
        arguments:
        tags:
            - { name: doctrine.event_listener, event: preUpdate }
    ur_api.event_listener.delete_condition_transform_value_when_report_view_remove_ransform:
        class: UR\Bundle\ApiBundle\EventListener\DeleteConditionTransformValueWhenReportViewRemoveTransformListener
        arguments:
        tags:
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: preRemove }
            - { name: doctrine.event_listener, event: postFlush }